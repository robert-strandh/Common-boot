(cl:in-package #:asdf-user)

(defsystem "common-boot-ast-to-hir"
  :depends-on ("iconoclast"
               "iconoclast-ast-transformations"
               "common-boot-hir"
               "concrete-syntax-tree")
  :serial t
  :components
  ((:file "packages")
   (:file "context")
   (:file "registers")
   (:file "register-adapter")
   (:file "translate")
   (:file "literal-ast")
   (:file "quote-ast")
   (:file "variable-reference-ast")
   (:file "progn-ast")
   (:file "locally-ast")
   (:file "simple-setq-ast")
   (:file "application-ast")
   (:file "multiple-value-call-ast")
   (:file "multiple-value-prog1-ast")
   (:file "if-ast")
   (:file "let-temporary-ast")
   (:file "static-environment-ast")
   (:file "set-static-environment-ast")
   (:file "read-static-environment-ast")
   (:file "tagbody-with-variable-ast")
   (:file "go-with-variable-ast")
   (:file "block-with-variable-ast")
   (:file "return-from-with-variable-ast")
   (:file "progv-ast")
   (:file "special-variable-bind-ast")
   (:file "special-variable-bound-ast")
   (:file "special-variable-reference-ast")
   (:file "special-variable-setq-ast")
   (:file "global-function-name-reference-ast")
   (:file "local-function-ast")
   (:file "labels-ast")
   (:file "the-ast")
   (:file "make-cell-ast")
   (:file "read-cell-ast")
   (:file "write-cell-ast")
   (:file "symbol-macrolet-ast")
   (:file "catch-ast")
   (:file "throw-ast")
   (:file "eval-when-ast")
   (:file "load-time-value-ast")
   (:file "ast-to-hir")))
